<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.test.spark</groupId>
    <artifactId>spark-example</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <sbt.project.name>examples</sbt.project.name>
        <build.testJarPhase>none</build.testJarPhase>
        <build.copyDependenciesPhase>package</build.copyDependenciesPhase>
        <hadoop.deps.scope>provided</hadoop.deps.scope>
        <hive.deps.scope>provided</hive.deps.scope>
        <parquet.deps.scope>provided</parquet.deps.scope>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.version>3.6.0</maven.version>
        <sbt.project.name>spark</sbt.project.name>
        <slf4j.version>1.7.16</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <hadoop.version>2.7.4</hadoop.version>
        <protobuf.version>2.5.0</protobuf.version>
        <yarn.version>${hadoop.version}</yarn.version>
        <zookeeper.version>3.4.6</zookeeper.version>
        <curator.version>2.7.1</curator.version>
        <hive.group>org.spark-project.hive</hive.group>
        <!-- Version used in Maven Hive dependency -->
        <hive.version>1.2.1.spark2</hive.version>
        <!-- Version used for internal directory structure -->
        <hive.version.short>1.2.1</hive.version.short>
        <!-- note that this should be compatible with Kafka brokers version 0.10 and up -->
        <kafka.version>2.1.1</kafka.version>
        <derby.version>10.12.1.1</derby.version>
        <parquet.version>1.10.1</parquet.version>
        <orc.version>1.5.4</orc.version>
        <orc.classifier>nohive</orc.classifier>
        <hive.parquet.version>1.6.0</hive.parquet.version>
        <jetty.version>9.4.12.v20180830</jetty.version>
        <javaxservlet.version>3.1.0</javaxservlet.version>
        <chill.version>0.9.3</chill.version>
        <ivy.version>2.4.0</ivy.version>
        <oro.version>2.0.8</oro.version>
        <codahale.metrics.version>3.1.5</codahale.metrics.version>
        <avro.version>1.8.2</avro.version>
        <avro.mapred.classifier>hadoop2</avro.mapred.classifier>
        <aws.kinesis.client.version>1.8.10</aws.kinesis.client.version>
        <!-- Should be consistent with Kinesis client dependency -->
        <aws.java.sdk.version>1.11.271</aws.java.sdk.version>
        <!-- the producer is used in tests -->
        <aws.kinesis.producer.version>0.12.8</aws.kinesis.producer.version>
        <!--  org.apache.httpcomponents/httpclient-->
        <commons.httpclient.version>4.5.6</commons.httpclient.version>
        <commons.httpcore.version>4.4.10</commons.httpcore.version>
        <!--  commons-httpclient/commons-httpclient-->
        <httpclient.classic.version>3.1</httpclient.classic.version>
        <commons.math3.version>3.4.1</commons.math3.version>
        <!-- managed up from 3.2.1 for SPARK-11652 -->
        <commons.collections.version>3.2.2</commons.collections.version>
        <scala.version>2.12.8</scala.version>
        <scala.binary.version>2.12</scala.binary.version>
        <scalafmt.parameters>--diff --test</scalafmt.parameters>
        <!-- for now, not running scalafmt as part of default verify pipeline -->
        <scalafmt.skip>true</scalafmt.skip>
        <codehaus.jackson.version>1.9.13</codehaus.jackson.version>
        <fasterxml.jackson.version>2.9.6</fasterxml.jackson.version>
        <snappy.version>1.1.7.1</snappy.version>
        <netlib.java.version>1.1.2</netlib.java.version>
        <calcite.version>1.2.0-incubating</calcite.version>
        <commons-codec.version>1.10</commons-codec.version>
        <commons-io.version>2.4</commons-io.version>
        <!-- org.apache.commons/commons-lang/-->
        <commons-lang2.version>2.6</commons-lang2.version>
        <!-- org.apache.commons/commons-lang3/-->
        <commons-lang3.version>3.8.1</commons-lang3.version>
        <datanucleus-core.version>3.2.10</datanucleus-core.version>
        <janino.version>3.0.11</janino.version>
        <jersey.version>2.22.2</jersey.version>
        <joda.version>2.9.3</joda.version>
        <jodd.version>3.5.2</jodd.version>
        <jsr305.version>3.0.0</jsr305.version>
        <libthrift.version>0.9.3</libthrift.version>
        <antlr4.version>4.7.1</antlr4.version>
        <jpam.version>1.1</jpam.version>
        <selenium.version>2.52.0</selenium.version>
        <!--
        Managed up from older version from Avro; sync with jackson-module-paranamer dependency version
        -->
        <paranamer.version>2.8</paranamer.version>
        <maven-antrun.version>1.8</maven-antrun.version>
        <commons-crypto.version>1.0.0</commons-crypto.version>
        <!--
        If you are changing Arrow version specification, please check ./python/pyspark/sql/utils.py,
        ./python/run-tests.py and ./python/setup.py too.
        -->
        <arrow.version>0.12.0</arrow.version>

        <test.java.home>${java.home}</test.java.home>
        <test.exclude.tags></test.exclude.tags>
        <test.include.tags></test.include.tags>

        <!-- Package to use when relocating shaded classes. -->
        <spark.shade.packageName>org.spark_project</spark.shade.packageName>

        <!-- Modules that copy jars to the build directory should do so under this location. -->
        <jars.target.dir>${project.build.directory}/scala-${scala.binary.version}/jars</jars.target.dir>

        <!-- Allow modules to enable / disable certain build plugins easily. -->
        <build.testJarPhase>prepare-package</build.testJarPhase>
        <build.copyDependenciesPhase>none</build.copyDependenciesPhase>

        <!--
          Dependency scopes that can be overridden by enabling certain profiles. These profiles are
          declared in the projects that build assemblies.

          For other projects the scope should remain as "compile", otherwise they are not available
          during compilation if the dependency is transivite (e.g. "graphx/" depending on "core/" and
          needing Hadoop classes in the classpath to compile).
        -->
        <hadoop.deps.scope>compile</hadoop.deps.scope>
        <hive.deps.scope>compile</hive.deps.scope>
        <orc.deps.scope>compile</orc.deps.scope>
        <parquet.deps.scope>compile</parquet.deps.scope>
        <parquet.test.deps.scope>test</parquet.test.deps.scope>

        <!--
          Overridable test home. So that you can call individual pom files directly without
          things breaking.
        -->
        <!--<spark.test.home>${session.executionRootDirectory}</spark.test.home>
    -->
        <CodeCacheSize>512m</CodeCacheSize>
        <spark.version>2.4.0</spark.version>
    </properties>

    <dependencies>
       <!-- <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.12.8</version>
        </dependency>-->
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>1.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.12</artifactId>
            <version>2.5.20</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-graphx_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka-0-10_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql-kafka-0-10_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>${commons.math3.version}</version>
            
        </dependency>
        <dependency>
            <groupId>org.scalacheck</groupId>
            <artifactId>scalacheck_${scala.binary.version}</artifactId>
            <version>1.13.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.12.8</version>
            
        </dependency>
        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${scala.binary.version}</artifactId>
            <version>3.7.0</version>
        </dependency>
        <dependency>
            <groupId>com.twitter</groupId>
            <artifactId>parquet-hadoop-bundle</artifactId>
            <version>${hive.parquet.version}</version>
            
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- This plugin compiles Scala files -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- This plugin compiles Java files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- This plugin adds all dependencies to JAR file during 'package' command.
            Pay EXTRA attention to the 'mainClass' tag.
            You have to set name of class with entry point to program ('main' method) -->
            <!--<plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>ScalaRunner</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
        </plugins>
    </build>

</project>